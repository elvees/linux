// SPDX-License-Identifier: GPL-2.0+
/*
 * Copyright 2022 RnD Center "ELVEES", JSC
 */

/dts-v1/;

#include <dt-bindings/net/ti-dp83867.h>
#include <dt-bindings/leds/common.h>

#include "mcom03-elvmc03-r2.2.dtsi"

/ {
	model = "ELV-MC03 r2.2, ELV-MC03-CB r1.0";
	compatible = "elvees,elvmc03-r2.2-elvmc03cb-r1.0",
		     "elvees,elvmc03-elvmc03cb",
		     "elvees,elvmc03cb-r1.0",
		     "elvees,elvmc03cb",
		     "elvees,elvmc03-r2.2",
		     "elvees,elvmc03",
		     "elvees,mcom03";

	aliases {
		i2c5 = &i2c_cam0;
		i2c6 = &i2c_cam1;
		i2c7 = &i2c_lcd;
		i2c8 = &i2c_fmc;
	};

	elvmc03cb-leds {
		compatible = "gpio-leds";

		led-hdd {
			gpios = <&gpio0b 4 GPIO_ACTIVE_HIGH>;
			default-state = "on";
			function = LED_FUNCTION_DISK_ACTIVITY;
			color = <LED_COLOR_ID_YELLOW>;
			linux,default-trigger = "disk-activity";
		};

		/* PWM_A0 */
		hl13 {
			gpios = <&gpio1d 2 GPIO_ACTIVE_HIGH>;
			default-state = "on";
			linux,default-trigger = "heartbeat";
		};
	};

	sdhci0_supply: regulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "sdhci0-supply";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
	};

	audio_codec_1v8_reg: regulator@1 {
		compatible = "regulator-fixed";
		regulator-name = "audio-codec-1v8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
	};

	audio_codec_3v3_reg: regulator@2 {
		compatible = "regulator-fixed";
		regulator-name = "audio-codec-3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	sound_card: sound {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "simple-audio-card";
		simple-audio-card,name = "ELV-MC03-CB-Audio";
		status = "okay";
		simple-audio-card,aux-devs = <&sound_select>;
		simple-audio-card,routing =
			"Channel1 IN", "AIFOUT", // for clk, ws on capture
			"AIFIN", "Channel1 OUT", // demux to sgtl5000
			"TX", "Channel2 OUT", // demux to hdmi
			"MIC_IN", "Mic Bias";

		simple-audio-card,dai-link@0{
			reg = <0>;
			format = "i2s";
			bitclock-master = <&dailink0_master>;
			frame-master = <&dailink0_master>;

			dailink0_master: cpu {
				sound-dai = <&i2s0>;
			};

			codec {
				sound-dai = <&sgtl5000>;
			};
		};

		simple-audio-card,dai-link@1{
			reg = <1>;
			format = "i2s";
			bitclock-master = <&dailink1_master>;
			frame-master = <&dailink1_master>;

			dailink1_master: cpu {
				sound-dai = <&i2s0>;
			};

			codec {
				sound-dai = <&adv7513>;
			};
		};
	};

	audio_codec_clk: audio_codec_clk {
		status = "okay";
		#clock-cells = <0>;
		compatible = "fixed-clock";
		clock-frequency = <12288000>;
	};

	sound_select: sound-select {
		compatible = "simple-audio-selector";
		select-gpios = <&pi4ioe5v6408 4 GPIO_ACTIVE_HIGH>;
	};
};

&sdhci0 {
	status = "okay";
	non-removable;
	bus-width = <8>;
	vqmmc-supply = <&sdhci0_supply>;
};

&sdhci1 {
	status = "okay";

	/* Disable 1.8V support
	 * Disable SDR50, SDR104 and DDR50 support
	 */
	sdhci-caps-mask = <0x7 0x4000000>;
	sdhci-caps = <0x0 0x0>;

	/* SDMMC1_WP pulled-up on ELV-MC03-CB */
	disable-wp;
};

&uart0 {
	status = "okay";
};

&uart1 {
	status = "okay";
};

&uart2 {
	status = "okay";
};

&uart3 {
	status = "okay";
};

&usb0 {
	status = "okay";
};

&usb1 {
	status = "okay";
};

&i2c01 {
	mcp7940n: rtc@6f {
		compatible = "microchip,mcp7941x";
		reg = <0x6f>;
		/* MFP(7) pin routed to GPIO0C_3 which do not have interrupt line.
		 * So device do not use interrupts and can not be used as
		 * wakeup-source */
	};

	fancontrol: emc2302@2e {
		compatible = "microchip,emc2305";
		reg = <0x2e>;
		#address-cells = <1>;
		#size-cells = <0>;
		microchip,pwm-separate;
		#cooling-cells = <2>;

		channel@0 {
			reg = <0>;
			microchip,pwm-push-pull;
		};

		channel@1 {
			reg = <1>;
			microchip,pwm-push-pull;
		};
	};

	sgtl5000: audio-codec@a {
		status = "okay";
		#sound-dai-cells = <0>;
		compatible = "fsl,sgtl5000";
		reg = <0xa>;
		clocks = <&audio_codec_clk>;
		clock-names = "mclk";
		micbias-resistor-k-ohms = <2>;
		/*
		 * 2.25 V is common micbias voltage according to Android spec
		 * https://source.android.com/docs/core/interaction/accessories/headset/jack-headset-spec
		 */
		micbias-voltage-m-volts = <2250>;
		VDDA-supply = <&audio_codec_3v3_reg>;
		VDDIO-supply = <&audio_codec_1v8_reg>;
		VDDD-supply = <&audio_codec_1v8_reg>;
	};

	i2c-switch@72 {
		compatible = "nxp,pca9546";
		reg = <0x72>;
		#address-cells = <1>;
		#size-cells = <0>;

		i2c_cam0: i2c01@0 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0>;
		};

		i2c_cam1: i2c01@1 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <1>;
		};

		i2c_lcd: i2c01@2 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <2>;
		};

		i2c_fmc: i2c01@3 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <3>;
		};
	};
};

&i2c1 {
	/* Connected to connector. Some external devices may not support
	 * for 400kHz */
	clock-frequency = <100000>;
	status = "okay";
};

&i2c2 {
	/* Connected to connector. Some external devices may not support
	 * for 400kHz */
	clock-frequency = <100000>;
	status = "okay";
};

&i2s0 {
	status = "okay";

	pinctrl-0 = <&i2s0_mux_sdo0 &i2s0_mux_sdi0 &i2s0_mux_sdo1 &i2s0_sdi0_cfg>;
};

&hsperiph_pinctrl {
	pinctrl-0 = <&hsperiph_misc_default &emac_v18>;
};

&emac0 {
	status = "okay";
};

&lsperiph1_pinctrl {
	emac1_int_cfg: emac1-int-cfg {
		phy {
			pins = "GPIOA_7";
			input-enable;
		};
	};

	i2s0_sdi0_cfg: i2s0-sdi0-cfg {
		sdi0 {
			pins = "GPIOB_4";
			input-enable;
		};
	};
};

&emac1 {
	status = "okay";
	pinctrl-0 = <&emac1_default &emac1_int_cfg>;
	phy-handle = <&ethernet_phy1>;
	reset-gpios = <&gpio1d 6 GPIO_ACTIVE_LOW>;
	reset-post-delay-us = <400000>;

	ethernet_phy1: ethernet-phy@8 {
		reg = <0x8>;
		ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_50_NS>;
		ti,tx-internal-delay = <DP83867_RGMIIDCTL_2_50_NS>;
		ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
		interrupt-parent = <&gpio1a>;
		interrupts = <7 IRQ_TYPE_LEVEL_LOW>;
	};
};

&dp {
	status = "okay";
};

&de_dpi {
	status = "okay";

	ports {
		port@1 {
			reg = <1>;

			rgb_out: endpoint {
				remote-endpoint = <&adv7513_in>;
			};
		};
	};
};

&adv7513 {
	status = "okay";

	port@0 {
		reg = <0>;
		adv7513_in: endpoint {
			remote-endpoint = <&rgb_out>;
		};
	};
};

/*
 * The fans are enabled on boot (a hardware feature).
 * The fan controller driver disables them if the CPU temperature is
 * lower than the trip point.
 * Upon reaching the trip point the thermal subsystem driver enables the fans.
 *
 * Thermal zones can be enabled/disabled via sysfs by writing said state into
 * the corresponding /sys/class/thermal/thermal_zoneX/mode file.
 */
&cpu_thermal {
	cooling_maps: cooling-maps {
		map0 {
			trip = <&cpu_alert0>;
			cooling-device = <&fancontrol
					THERMAL_NO_LIMIT
					THERMAL_NO_LIMIT>;
		};
	};
};

&isp {
	status = "okay";
};

&csi0 {
	status = "okay";
};

&csi1 {
	status = "okay";
};

